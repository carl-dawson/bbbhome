"""initial migrate

Revision ID: c3b626ebfb53
Revises: 
Create Date: 2020-06-03 23:28:52.440915

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c3b626ebfb53'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_site():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devices_email'), 'devices', ['email'], unique=True)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=256), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_timestamp'), 'posts', ['timestamp'], unique=False)
    op.create_table('user_rooms',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade_site():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_rooms')
    op.drop_index(op.f('ix_posts_timestamp'), table_name='posts')
    op.drop_table('posts')
    op.drop_table('user_roles')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_devices_email'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###


def upgrade_calibre():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sqlite_sequence')
    op.drop_index('conversion_options_idx_a', table_name='conversion_options')
    op.drop_index('conversion_options_idx_b', table_name='conversion_options')
    op.drop_table('conversion_options')
    op.drop_table('metadata_dirtied')
    op.drop_table('books_plugin_data')
    op.drop_table('preferences')
    op.drop_table('feeds')
    op.drop_table('library_id')
    op.drop_index('lrp_idx', table_name='last_read_positions')
    op.drop_table('last_read_positions')
    op.drop_index('custom_columns_idx', table_name='custom_columns')
    op.drop_table('custom_columns')
    op.alter_column('authors', 'link',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text('("")'))
    op.alter_column('authors', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('books', 'last_modified',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('("2000-01-01 00:00:00+00:00")'))
    op.alter_column('books', 'path',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text('("")'))
    op.alter_column('books', 'series_index',
               existing_type=sa.REAL(),
               nullable=True,
               existing_server_default=sa.text('(1.0)'))
    op.alter_column('books', 'title',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'Unknown'"))
    op.drop_index('authors_idx', table_name='books')
    op.drop_index('books_idx', table_name='books')
    op.drop_column('books', 'flags')
    op.drop_column('books', 'lccn')
    op.drop_column('books', 'isbn')
    op.drop_index('books_authors_link_aidx', table_name='books_authors_link')
    op.drop_index('books_authors_link_bidx', table_name='books_authors_link')
    op.create_foreign_key(None, 'books_authors_link', 'books', ['book'], ['id'])
    op.create_foreign_key(None, 'books_authors_link', 'authors', ['author'], ['id'])
    op.drop_column('books_authors_link', 'id')
    op.drop_index('books_languages_link_aidx', table_name='books_languages_link')
    op.drop_index('books_languages_link_bidx', table_name='books_languages_link')
    op.create_foreign_key(None, 'books_languages_link', 'books', ['book'], ['id'])
    op.create_foreign_key(None, 'books_languages_link', 'languages', ['lang_code'], ['id'])
    op.drop_column('books_languages_link', 'id')
    op.drop_column('books_languages_link', 'item_order')
    op.drop_index('books_publishers_link_aidx', table_name='books_publishers_link')
    op.drop_index('books_publishers_link_bidx', table_name='books_publishers_link')
    op.create_foreign_key(None, 'books_publishers_link', 'books', ['book'], ['id'])
    op.create_foreign_key(None, 'books_publishers_link', 'publishers', ['publisher'], ['id'])
    op.drop_column('books_publishers_link', 'id')
    op.drop_index('books_ratings_link_aidx', table_name='books_ratings_link')
    op.drop_index('books_ratings_link_bidx', table_name='books_ratings_link')
    op.create_foreign_key(None, 'books_ratings_link', 'ratings', ['rating'], ['id'])
    op.create_foreign_key(None, 'books_ratings_link', 'books', ['book'], ['id'])
    op.drop_column('books_ratings_link', 'id')
    op.drop_index('books_series_link_aidx', table_name='books_series_link')
    op.drop_index('books_series_link_bidx', table_name='books_series_link')
    op.create_foreign_key(None, 'books_series_link', 'books', ['book'], ['id'])
    op.create_foreign_key(None, 'books_series_link', 'series', ['series'], ['id'])
    op.drop_column('books_series_link', 'id')
    op.drop_index('books_tags_link_aidx', table_name='books_tags_link')
    op.drop_index('books_tags_link_bidx', table_name='books_tags_link')
    op.create_foreign_key(None, 'books_tags_link', 'tags', ['tag'], ['id'])
    op.create_foreign_key(None, 'books_tags_link', 'books', ['book'], ['id'])
    op.drop_column('books_tags_link', 'id')
    op.alter_column('comments', 'book',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('comments', 'text',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index('comments_idx', table_name='comments')
    op.create_foreign_key(None, 'comments', 'books', ['book'], ['id'])
    op.alter_column('data', 'book',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('data', 'format',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('data', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('data', 'uncompressed_size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('data_idx', table_name='data')
    op.drop_index('formats_idx', table_name='data')
    op.create_foreign_key(None, 'data', 'books', ['book'], ['id'])
    op.alter_column('identifiers', 'book',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('identifiers', 'type',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text('("isbn")'))
    op.alter_column('identifiers', 'val',
               existing_type=sa.TEXT(),
               nullable=True)
    op.create_foreign_key(None, 'identifiers', 'books', ['book'], ['id'])
    op.alter_column('languages', 'lang_code',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index('languages_idx', table_name='languages')
    op.alter_column('publishers', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index('publishers_idx', table_name='publishers')
    op.alter_column('series', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index('series_idx', table_name='series')
    op.alter_column('tags', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index('tags_idx', table_name='tags')
    # ### end Alembic commands ###


def downgrade_calibre():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('tags_idx', 'tags', ['name'], unique=False)
    op.alter_column('tags', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_index('series_idx', 'series', ['name'], unique=False)
    op.alter_column('series', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_index('publishers_idx', 'publishers', ['name'], unique=False)
    op.alter_column('publishers', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_index('languages_idx', 'languages', ['lang_code'], unique=False)
    op.alter_column('languages', 'lang_code',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_constraint(None, 'identifiers', type_='foreignkey')
    op.alter_column('identifiers', 'val',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('identifiers', 'type',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text('("isbn")'))
    op.alter_column('identifiers', 'book',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'data', type_='foreignkey')
    op.create_index('formats_idx', 'data', ['format'], unique=False)
    op.create_index('data_idx', 'data', ['book'], unique=False)
    op.alter_column('data', 'uncompressed_size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('data', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('data', 'format',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('data', 'book',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_index('comments_idx', 'comments', ['book'], unique=False)
    op.alter_column('comments', 'text',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('comments', 'book',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('books_tags_link', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'books_tags_link', type_='foreignkey')
    op.drop_constraint(None, 'books_tags_link', type_='foreignkey')
    op.create_index('books_tags_link_bidx', 'books_tags_link', ['book'], unique=False)
    op.create_index('books_tags_link_aidx', 'books_tags_link', ['tag'], unique=False)
    op.add_column('books_series_link', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'books_series_link', type_='foreignkey')
    op.drop_constraint(None, 'books_series_link', type_='foreignkey')
    op.create_index('books_series_link_bidx', 'books_series_link', ['book'], unique=False)
    op.create_index('books_series_link_aidx', 'books_series_link', ['series'], unique=False)
    op.add_column('books_ratings_link', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'books_ratings_link', type_='foreignkey')
    op.drop_constraint(None, 'books_ratings_link', type_='foreignkey')
    op.create_index('books_ratings_link_bidx', 'books_ratings_link', ['book'], unique=False)
    op.create_index('books_ratings_link_aidx', 'books_ratings_link', ['rating'], unique=False)
    op.add_column('books_publishers_link', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'books_publishers_link', type_='foreignkey')
    op.drop_constraint(None, 'books_publishers_link', type_='foreignkey')
    op.create_index('books_publishers_link_bidx', 'books_publishers_link', ['book'], unique=False)
    op.create_index('books_publishers_link_aidx', 'books_publishers_link', ['publisher'], unique=False)
    op.add_column('books_languages_link', sa.Column('item_order', sa.INTEGER(), server_default=sa.text('0'), nullable=False))
    op.add_column('books_languages_link', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'books_languages_link', type_='foreignkey')
    op.drop_constraint(None, 'books_languages_link', type_='foreignkey')
    op.create_index('books_languages_link_bidx', 'books_languages_link', ['book'], unique=False)
    op.create_index('books_languages_link_aidx', 'books_languages_link', ['lang_code'], unique=False)
    op.add_column('books_authors_link', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'books_authors_link', type_='foreignkey')
    op.drop_constraint(None, 'books_authors_link', type_='foreignkey')
    op.create_index('books_authors_link_bidx', 'books_authors_link', ['book'], unique=False)
    op.create_index('books_authors_link_aidx', 'books_authors_link', ['author'], unique=False)
    op.add_column('books', sa.Column('isbn', sa.TEXT(), server_default=sa.text('("")'), nullable=True))
    op.add_column('books', sa.Column('lccn', sa.TEXT(), server_default=sa.text('("")'), nullable=True))
    op.add_column('books', sa.Column('flags', sa.INTEGER(), server_default=sa.text('1'), nullable=False))
    op.create_index('books_idx', 'books', ['sort'], unique=False)
    op.create_index('authors_idx', 'books', ['author_sort'], unique=False)
    op.alter_column('books', 'title',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text("'Unknown'"))
    op.alter_column('books', 'series_index',
               existing_type=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(1.0)'))
    op.alter_column('books', 'path',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text('("")'))
    op.alter_column('books', 'last_modified',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('("2000-01-01 00:00:00+00:00")'))
    op.alter_column('authors', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('authors', 'link',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text('("")'))
    op.create_table('custom_columns',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('label', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('datatype', sa.TEXT(), nullable=False),
    sa.Column('mark_for_delete', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.Column('editable', sa.BOOLEAN(), server_default=sa.text('1'), nullable=False),
    sa.Column('display', sa.TEXT(), server_default=sa.text('("{}")'), nullable=False),
    sa.Column('is_multiple', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.Column('normalized', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_index('custom_columns_idx', 'custom_columns', ['label'], unique=False)
    op.create_table('last_read_positions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book', sa.INTEGER(), nullable=False),
    sa.Column('format', sa.TEXT(), nullable=False),
    sa.Column('user', sa.TEXT(), nullable=False),
    sa.Column('device', sa.TEXT(), nullable=False),
    sa.Column('cfi', sa.TEXT(), nullable=False),
    sa.Column('epoch', sa.REAL(), nullable=False),
    sa.Column('pos_frac', sa.REAL(), server_default=sa.text('0'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user', 'device', 'book', 'format')
    )
    op.create_index('lrp_idx', 'last_read_positions', ['book'], unique=False)
    op.create_table('library_id',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uuid', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('feeds',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('script', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('preferences',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('key', sa.TEXT(), nullable=False),
    sa.Column('val', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('books_plugin_data',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('val', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('book', 'name')
    )
    op.create_table('metadata_dirtied',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('book')
    )
    op.create_table('conversion_options',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('format', sa.TEXT(), nullable=False),
    sa.Column('book', sa.INTEGER(), nullable=True),
    sa.Column('data', sa.BLOB(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('format', 'book')
    )
    op.create_index('conversion_options_idx_b', 'conversion_options', ['book'], unique=False)
    op.create_index('conversion_options_idx_a', 'conversion_options', ['format'], unique=False)
    op.create_table('sqlite_sequence',
    sa.Column('name', sa.NullType(), nullable=True),
    sa.Column('seq', sa.NullType(), nullable=True)
    )
    # ### end Alembic commands ###

